
name: check mission 5

on:
  pull_request:
    branches: [ "mission-5-sqlfluff" ]


jobs:
  check-mission-5:
    runs-on: ubuntu-latest

    env:
      DBT_PROFILES_DIR: ./src/transformation/dbt_paris_event_analyzer/profiles/
      DBT_PROJECT_DIR: ./src/transformation/dbt_paris_event_analyzer/
      DBT_ENV_SECRET_MINIO_ACCESS_KEY: ${{ secrets.DBT_ENV_SECRET_MINIO_ACCESS_KEY }}
      DBT_ENV_SECRET_MINIO_SECRET_KEY: ${{ secrets.DBT_ENV_SECRET_MINIO_SECRET_KEY }}
      PYTHON: "3.12"

    steps:
      - name: Check out ${{ github.repository }} repository code
        uses: actions/checkout@v4
      - name: Check file existence
        uses: andstor/file-existence-action@v3
        with:
          files: ".sqlfluff, .sqlfluffignore"
          fail: true
      - name: Check logger implementation
        run: |
          [ $(grep -Fr --include="*.py" "rprint(" . | wc -l) = 0 ]
          [ $(grep -Fr --include="*.py" "log." . | wc -l) = 12 ]
      - name: Check Pre-commit added repo
        run: |
          [ $(grep -F "repo:" .pre-commit-config.yaml | wc -l) = 6 ]
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.x"
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock
      - name: Installing Python ${{ env.PYTHON }}
        run: uv python install ${{ env.PYTHON }}
      - name: Sync Python environment
        run: uv sync --frozen
      - name: Install project in editable mode
        run: uv pip install -e .
      - name: Run the pre-commit hooks via just
        run: uv run just quality-default
      - name: Create the datalake directory
        run: |
          mkdir -p src/ingestion/datalake
          echo "Datalake directory created"
          sleep 2
      - name: Setting up MinIO
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          compose-file: "docker-compose.yml"
          up-flags: -d
      - name: Run ingestion workflow
        run: just ingest
      - name: Run the transformation workflow
        run: just dbt-run
      - name: Reveal Secret
        run: echo "Last secret unlocked -> ${{ vars.INDICE_5 }}"
