
name: check mission 1

on:
  pull_request:
    branches: [ "mission-1-uv" ]


jobs:
  check-mission-1:
    runs-on: ubuntu-latest

    env:
      DBT_ENV_SECRET_MINIO_ACCESS_KEY: ${{ secrets.DBT_ENV_SECRET_MINIO_ACCESS_KEY }}
      DBT_ENV_SECRET_MINIO_SECRET_KEY: ${{ secrets.DBT_ENV_SECRET_MINIO_SECRET_KEY }}
      PYTHON: "3.12"
      INGESTION_ENTRYPOINT: "src/ingestion/main.py"

    steps:
      - name: Check out ${{ github.repository }} repository code
        uses: actions/checkout@v4
      - name: Check file existence
        uses: andstor/file-existence-action@v3
        with:
          files: "pyproject.toml, uv.lock, justfile, .python-version, ${{ env.INGESTION_ENTRYPOINT }}"
          fail: true
      - name: Check file absence
        run: |
          [ ! -f ".env" ]
          [ ! -f "requirements.in" ]
          [ ! -e "pea_cache/" ]
          [ ! -e "datalake/" ]
      - name: Check Python pinned version
        run: grep -Fx ${{ env.PYTHON }} .python-version
      - name: Check packages installation
        run: (for f in "dotenv" "duckdb" "minio" "requests-cache" "rich"; do grep -qF "$f" pyproject.toml && echo "✅ $f" || echo "❌ $f"; done; exit 1)
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.x"
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock
      - name: Installing Python ${{ env.PYTHON }}
        run: uv python install ${{ env.PYTHON }}
      - name: Sync Python environment
        run: uv sync --frozen
      - name: Create the datalake directory
        run: |
          mkdir -p src/ingestion/datalake
          echo "Datalake directory created successfully"
          sleep 2
      - name: Setting up MinIO
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          compose-file: "docker-compose.yml"
          up-flags: -d
      - name: Run ingestion workflow
        run: uv run python ${{ env.INGESTION_ENTRYPOINT }}
      - name: Reveal Secret
        run: echo "First secret unlocked -> ${{ vars.INDICE_1 }}"
