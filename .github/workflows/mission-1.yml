
name: check mission 1

on:
  pull_request:
    branches: [ "mission-1-uv" ]


jobs:
  check-mission-1:
    runs-on: ubuntu-latest

    env:
      DBT_ENV_SECRET_MINIO_ACCESS_KEY: ${{ secrets.DBT_ENV_SECRET_MINIO_ACCESS_KEY }}
      DBT_ENV_SECRET_MINIO_SECRET_KEY: ${{ secrets.DBT_ENV_SECRET_MINIO_SECRET_KEY }}
      PRECOMMIT_CI_CONFIG_GIST_ID: "8ea103f7c3bbda18007720df988311c3"
      PRECOMMIT_CI_CONFIG: ".pre-commit-config-1.yaml"
      PYTHON: "3.12"
      INGESTION_ENTRYPOINT: "src/ingestion/main.py"

    steps:
      - name: Check out ${{ github.repository }} repository code
        uses: actions/checkout@v4
      - name: Clone the pre-commit hook associated from Gist
        run: |
          git clone https://gist.github.com/CAprogs/${{ env.PRECOMMIT_CI_CONFIG_GIST_ID }}.git
      - name: Check file existence
        uses: andstor/file-existence-action@v3
        with:
          files: "${{ env.PRECOMMIT_CI_CONFIG }}, pyproject.toml, uv.lock, justfile, ${{ env.INGESTION_ENTRYPOINT }}"
          fail: true
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.x"
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock
      - name: Installing Python ${{ env.PYTHON }}
        run: uv python install ${{ env.PYTHON }}
      - name: Sync Python environment
        run: uv sync --frozen --all-group
      - name: Install the pre-commit hooks
        run: uv run pre-commit install --install-hooks -c ${{env.PRECOMMIT_CI_CONFIG_GIST_ID }}/${{ env.PRECOMMIT_CI_CONFIG }}
      - name: Run the pre-commit CI hooks
        run: uv run pre-commit run --all-files -c ${{env.PRECOMMIT_CI_CONFIG_GIST_ID }}/${{ env.PRECOMMIT_CI_CONFIG }}
      - name: Create the datalake directory
        run: |
          mkdir -p src/ingestion/datalake
          echo "Datalake directory created successfully"
          sleep 2
      - name: Setting up MinIO
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          compose-file: "docker-compose.yml"
          up-flags: -d
      - name: Run ingestion workflow
        run: uv run python ${{ env.INGESTION_ENTRYPOINT }}
      - name: Reveal Secret
        run: echo "First secret unlocked -> ${{ secrets.INDICE_1 }}"
